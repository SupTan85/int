{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1714204087065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714204823442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,5 +36,13 @@\n int.new(\"13\") -- input can be a number or string!\r\n ```\r\n \r\n you can use **Calculation operators** to calculate math. \r\n-**note: only operator that in support**\n\\ No newline at end of file\n+**note: only operator that in support**\r\n+```lua\r\n+local int = require(\"int\")\r\n+\r\n+local a = int.new(\"20\")\r\n+local b = int.new(\"10\")\r\n+\r\n+print(a + b) -- output: 30\r\n+```\n\\ No newline at end of file\n"
                },
                {
                    "date": 1714492651043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+# int\r\n+\r\n+math and calculate for large data in Lua\r\n+**waring this module is in beta!**\r\n+\r\n+## Feature\r\n+\r\n+- **calculate**\r\n+    - addition `+`\r\n+    - subtraction `-`\r\n+    - multiplication `*`\r\n+    - division `\\, \\\\`\r\n+    - modulo `%`\r\n+- **equation**\r\n+    - equal\r\n+    - less than\r\n+    - more than\r\n+- **other**\r\n+    - tostring\r\n+    - tonumber\r\n+    - sign\r\n+    - abs\r\n+    - floor\r\n+    - fdigitlen `INTEGER LEN + DECIMAL LEN`\r\n+\r\n+## How to use\r\n+\r\n+you can require a module with *require* function in Lua\r\n+```lua\r\n+local int = require(\"int\")\r\n+```\r\n+\r\n+to use this module you should to make a **new** object\r\n+```lua\r\n+local int = require(\"int\")\r\n+\r\n+int.new(\"13\") -- input can be a number or string! *recommend to use string*\r\n+```\r\n+\r\n+you can use **Calculation operators** to calculate math. \r\n+**note: only operator that in support**\r\n+```lua\r\n+local int = require(\"int\")\r\n+\r\n+local a = int.new(\"20\")\r\n+local b = int.new(\"10\")\r\n+\r\n+print(a + b) -- output: 30\r\n+```\r\n+## Design\r\n+this inside of *table*, and this mean 101 **if you use \"tostring\" function**\r\n+```lua\r\n+local example_int_table = {\r\n+    -- digit --\r\n+    [1] = 1, -- this a digit block\r\n+    [0] = 0,\r\n+    [-1] = 1,\r\n+\r\n+    -- table info --\r\n+    sign = \"+\",\r\n+\r\n+    _dlen = -1, -- digit of decimal *this for calculate a decimal* **DO NOT CHANGE. HAVE LIMIT!!**\r\n+    _size = 1 -- mean per size of block *just maximum digit per value in the digit block* **DO NOT CHANGE. HAVE LIMIT!!**\r\n+}\r\n+```\r\n+## limit\r\n+- maximum digit of integer is 9223372036854775806\r\n+    - if you set `_size` to 9 **maximum digit of integer is 83010348331692982254!** (9223372036854775806 * 9)\r\n+\r\n+- maximum digit of decimal is 9223372036854775808\r\n+    - if you set `_size` to 9 **maximum decimal of integer is 83010348331692982272!** (9223372036854775808 * 9)\r\n"
                }
            ],
            "date": 1714204087065,
            "name": "Commit-0",
            "content": "# int\r\n\r\nmath and calculate for large data in Lua\r\n**waring this module is in beta**\r\n\r\n## Feature\r\n\r\n- **calculate**\r\n    - addition\r\n    - subtraction\r\n    - multiplication\r\n    - division\r\n- **equation**\r\n    - equal\r\n    - less than\r\n    - more than\r\n- **other**\r\n    - tostring\r\n    - tonumber\r\n    - sign\r\n    - abs\r\n    - floor\r\n    - fdigitlen `INTEGER + DECIMAL`\r\n\r\n## How to use\r\n\r\nyou can require a module with *require* function in Lua\r\n```lua\r\nlocal int = require(\"int\")\r\n```"
        }
    ]
}